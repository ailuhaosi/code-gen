package ${package}.${moduleName}.${pathName}.controller;

import java.util.Arrays;
import java.util.Map;

import com.fasterxml.jackson.databind.ObjectMapper;
import ${mainPath}.common.validator.group.UpdateGroup;
import ${package}.${moduleName}.${pathName}.dto.${className}ListReqDTO;
import ${package}.${moduleName}.${pathName}.dto.${className}UpdateStatusReqDTO;
import ${package}.${moduleName}.${pathName}.dto.${className}Entity;
import ${package}.${moduleName}.${pathName}.dto.${className}ListResDTO;
import ${package}.${moduleName}.${pathName}.dto.${className}SaveReqDTO;
import ${package}.${moduleName}.${pathName}.dto.converter.${className}SaveReqConverter;
//

import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import ${package}.${moduleName}.${pathName}.service.${className}Service;
import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.R;
//////////



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(tags = {"${moduleName}_${classname}"})
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @GetMapping("/list")
    @RequiresPermissions("${moduleName}:${pathName}:list")
    @ApiOperation("list")
    @ApiResponses({
            @ApiResponse(code = 0, message = "ok", response = ${pathName}ListResDTO.class)
    })
    public R list(${pathName}ListReqDTO params){

        ObjectMapper oMapper = new ObjectMapper();
        Map<String, Object> listReqParams = oMapper.convertValue(params, Map.class);

        PageUtils<${className}ListResDTO.RegionListItemDTO> page = ${classname}Service.queryPage(listReqParams);

        return R.ok().put("data", page);
    }


    /**
     * 信息
     */
    @GetMapping("/info}")
    @RequiresPermissions("${moduleName}:${pathName}:info")
    @ApiOperation("info")
    @ApiResponses({
            @ApiResponse(code = 0, message = "ok", response = ${className}SaveReqDTO.class)
    })
    public R info(Integer ${pk.attrname}){

         ${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

         ${className}SaveReqDTO ${classname}SaveReqDTO = ${className}SaveReqConverter.INSTANCE.getDto(${classname});

        return R.ok().put("data", ${classname}SaveReqDTO);
    }

    /**
     * 保存
     */
    @PostMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    @ApiOperation("save")
    public R save(@Validated @RequestBody ${className}SaveReqDTO ${classname}){
        ${className}Entity ${classname}Entity = ${className}SaveReqConverter.INSTANCE.getEntity(${classname});

        ${classname}Service.save(${classname}Entity);

        return R.ok();
    }

    /**
     * 修改
     */
    @PutMapping("/update")
    @RequiresPermissions("${moduleName}:${pathName}:update")
    @ApiOperation("update")
    public R update(@Validated({UpdateGroup.class}) @RequestBody ${className}SaveReqDTO ${classname}){
        ${className}Entity ${classname}Entity = ${className}SaveReqConverter.INSTANCE.getEntity(${classname});

        ${classname}Service.updateById(${classname}Entity);

        return R.ok();
    }

    /**
     * 删除
     */
    @DeleteMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    @ApiOperation("delete")
    public R delete(@RequestBody Integer[] ${pk.columnName}s){
       ${classname}Service.removeByIds(Arrays.asList(${pk.columnName}s));

        return R.ok();
    }

}
